version: "3.8"
services:
    database:
        container_name: database
        image: postgres:14.2-alpine
        restart: always
        env_file: .env
        volumes:
            - ./log-directory:/var/lib/postgresql/data
        environment:
            POSTGRES_HOST_AUTH_METHOD: trust
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "5432:5432"  
        networks:
            - library        
    back:
        container_name: back
        restart: unless-stopped
        env_file:
            - ./library_back/.env
        build:
            context: ./library_back
            dockerfile: Dockerfile
        command: >
            bash -c "python library_back/manage.py makemigrations && 
                python library_back/manage.py migrate &&
                python library_back/manage.py runserver 0.0.0.0:8000"
        environment:
            POSTGRES_HOST_AUTH_METHOD: trust
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - .:/app
        ports:
            - "8000:8000"
        depends_on:
            - database
        networks:
            - library
    front: 
        build: ./library_front
        container_name: library_frontend
        ports:
            - "3000:3000"
        stdin_open: true
        tty: true
        depends_on:
            - back
            - database
        networks:
            - library
networks:
    library:
        name: library
        driver: bridge